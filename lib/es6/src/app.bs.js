// Generated by BUCKLESCRIPT VERSION 6.0.3, PLEASE EDIT WITH CARE

import * as Chat from "./chat.bs.js";
import * as Vdom from "bucklescript-tea/lib/es6/src-ocaml/vdom.js";
import * as Router from "./router.bs.js";
import * as Tea_cmd from "bucklescript-tea/lib/es6/src-ocaml/tea_cmd.js";
import * as Tea_sub from "bucklescript-tea/lib/es6/src-ocaml/tea_sub.js";
import * as Caml_obj from "bs-platform/lib/es6/caml_obj.js";
import * as Tea_html from "bucklescript-tea/lib/es6/src-ocaml/tea_html.js";
import * as Tea_navigation from "bucklescript-tea/lib/es6/src-ocaml/tea_navigation.js";
import * as Caml_chrome_debugger from "bs-platform/lib/es6/caml_chrome_debugger.js";

function chatMsg(param_0) {
  return /* ChatMsg */Caml_chrome_debugger.variant("ChatMsg", 0, [param_0]);
}

function location_changed(param_0) {
  return /* Location_changed */Caml_chrome_debugger.variant("Location_changed", 1, [param_0]);
}

function goTo(param_0) {
  return /* GoTo */Caml_chrome_debugger.variant("GoTo", 2, [param_0]);
}

function update_route(model, route) {
  if (Caml_obj.caml_equal(model[/* route */1], route)) {
    return /* tuple */[
            model,
            Tea_cmd.none
          ];
  } else if (route) {
    var match = Chat.update_route(model[/* chat */0], route[0]);
    var route$1 = match[1];
    return /* tuple */[
            /* record */Caml_chrome_debugger.record([
                "chat",
                "route"
              ], [
                match[0],
                route$1
              ]),
            Tea_navigation.newUrl(Router.location_of_route(route$1))
          ];
  } else {
    var chat = Chat.reset_route(model[/* chat */0]);
    return /* tuple */[
            /* record */Caml_chrome_debugger.record([
                "chat",
                "route"
              ], [
                chat,
                route
              ]),
            Tea_navigation.newUrl(Router.location_of_route(route))
          ];
  }
}

function init(param, $$location) {
  var model_000 = /* chat */Chat.init[0];
  var model = /* record */Caml_chrome_debugger.record([
      "chat",
      "route"
    ], [
      model_000,
      0
    ]);
  var match = update_route(model, Router.route_of_location($$location));
  return /* tuple */[
          match[0],
          Tea_cmd.batch(/* :: */Caml_chrome_debugger.simpleVariant("::", [
                  Tea_cmd.map(chatMsg, Chat.init[1]),
                  /* :: */Caml_chrome_debugger.simpleVariant("::", [
                      match[1],
                      /* [] */0
                    ])
                ]))
        ];
}

function update(model, param) {
  switch (param.tag | 0) {
    case 0 : 
        var chat_msg = param[0];
        if (chat_msg.tag === 1) {
          return update_route(model, chat_msg[0]);
        } else {
          var match = Chat.update(model[/* chat */0], chat_msg);
          return /* tuple */[
                  /* record */Caml_chrome_debugger.record([
                      "chat",
                      "route"
                    ], [
                      match[0],
                      model[/* route */1]
                    ]),
                  Tea_cmd.map(chatMsg, match[1])
                ];
        }
    case 1 : 
        return update_route(model, Router.route_of_location(param[0]));
    case 2 : 
        return update_route(model, param[0]);
    
  }
}

function content(model) {
  var match = model[/* route */1];
  if (match) {
    return Vdom.map(chatMsg, Chat.view(model[/* chat */0], match[0]));
  } else {
    return Tea_html.div(undefined, undefined, /* [] */0, /* [] */0);
  }
}

function view(model) {
  return Tea_html.div(undefined, undefined, /* [] */0, /* :: */Caml_chrome_debugger.simpleVariant("::", [
                Tea_html.span(undefined, undefined, /* :: */Caml_chrome_debugger.simpleVariant("::", [
                        Tea_html.style("text-weight", "bold"),
                        /* [] */0
                      ]), /* :: */Caml_chrome_debugger.simpleVariant("::", [
                        Tea_html.text(model[/* chat */0][/* client */0].clientRunning ? model[/* chat */0][/* client */0].credentials.userId : "disconnected"),
                        /* [] */0
                      ])),
                /* :: */Caml_chrome_debugger.simpleVariant("::", [
                    Tea_html.div(undefined, undefined, /* :: */Caml_chrome_debugger.simpleVariant("::", [
                            Tea_html.id("sidebar"),
                            /* [] */0
                          ]), /* :: */Caml_chrome_debugger.simpleVariant("::", [
                            Vdom.map(chatMsg, Chat.room_list_view(model[/* chat */0])),
                            /* [] */0
                          ])),
                    /* :: */Caml_chrome_debugger.simpleVariant("::", [
                        Tea_html.div(undefined, undefined, /* :: */Caml_chrome_debugger.simpleVariant("::", [
                                Tea_html.id("main"),
                                /* [] */0
                              ]), /* :: */Caml_chrome_debugger.simpleVariant("::", [
                                content(model),
                                /* [] */0
                              ])),
                        /* :: */Caml_chrome_debugger.simpleVariant("::", [
                            Tea_html.button(undefined, undefined, /* :: */Caml_chrome_debugger.simpleVariant("::", [
                                    Tea_html.onClick(/* GoTo */Caml_chrome_debugger.variant("GoTo", 2, [/* Index */0])),
                                    /* [] */0
                                  ]), /* :: */Caml_chrome_debugger.simpleVariant("::", [
                                    Tea_html.text("Index"),
                                    /* [] */0
                                  ])),
                            /* [] */0
                          ])
                      ])
                  ])
              ]));
}

function subscriptions(model) {
  return Tea_sub.map(chatMsg, Chat.subscriptions(model[/* chat */0]));
}

var main = Tea_navigation.navigationProgram(location_changed, /* record */Caml_chrome_debugger.record([
        "init",
        "update",
        "view",
        "subscriptions",
        "shutdown"
      ], [
        init,
        update,
        view,
        subscriptions,
        (function (param) {
            return Tea_cmd.none;
          })
      ]));

export {
  chatMsg ,
  location_changed ,
  goTo ,
  update_route ,
  init ,
  update ,
  content ,
  view ,
  subscriptions ,
  main ,
  
}
/* main Not a pure module */
